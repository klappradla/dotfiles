#!/bin/bash
readonly DOTFILES_DIR="$HOME/dotfiles"

# exit immediately if a command exits with non-zero
set -e

. "$HOME/dotfiles/scripts/print.sh"

is_symlink() {
  local file_name=$1
  [ -h "$file_name" ]
}

file_exists() {
  local file_name=$1
  [ -e "$file_name" ]
}

remove_old_link() {
  local file=$1
  is_symlink "$file" &&
  info "Removing old symlink for $file..." &&
  rm -rf "$file"
}

is_file() {
  local file=$1
  file_exists "$file" || return 0
  fail "WARNING: $file is a not a symlink! Please remove by hand..."
}

link_files() {
  local target=$1
  local link=$2

  remove_old_link "$link" || is_file "$link" &&
  ln -s "$target" "$link" &&
  success "Linking $link to $target..."
}

symlink() {
  local targets=$1
  local link_path=$2
  for target in $targets; do
    link_files "$DOTFILES_DIR/$target" "$link_path$(basename "$target")"
  done
}

main() {
  prompt "Symlink dotfiles for ~/ ?" &&
  symlink "home/*" "$HOME/."

  prompt "Symlink Atom Editor config?" &&
  symlink "atom/*" "$HOME/.atom/"

  prompt "Symlink LaunchD Agents?" &&
    for target in agents/*.plist; do
      prompt "Symlink $target?" &&
      symlink "$target" "$HOME/Library/LaunchAgents/"
    done

  prompt "Symlink Spectacle shortcuts?" &&
  symlink "config/Spectacle" "$HOME/Library/Application Support/"

  prompt "Symlink Karabiner config?" &&
  symlink "config/karabiner" "$HOME/.config/"

  prompt "Symlink Neovim config?" &&
  symlink "config/nvim" "$HOME/.config/"

  prompt "Symlink ssh config?" &&
  symlink "ssh/config" "$HOME/.ssh/"
}
main
