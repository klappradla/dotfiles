#!/bin/bash

readonly HOMEBREW_URL="https://raw.githubusercontent.com/Homebrew/install/master/install"
readonly MACOS_DEFAULTS="$HOME/dotfiles/scripts/macos.sh"

# exit immediately if a command exits with non-zero
set -e

info() {
  printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}

user() {
  printf "\r  [ \033[0;33m??\033[0m ] $1\n"
}

success() {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail() {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

print_info() {
  local data=$1
  while read -r data; do info "$data"; done
}

prompt() {
  local question=$1
  local response
  user "$question [y|n]"
  read -e response
  [ "$response" != "n" ]
}

install_homebrew() {
  if ! command -v brew >/dev/null; then
    curl -fsSL $HOMEBREW_URL \
      | ruby 2>&1 \
      | print_info
  fi
  success "Homebrew installed"
}

install_apps() {
  brew bundle | print_info
  success "Apps installed"
}

update_shell() {
  local shell_path="/usr/local/bin/zsh"
  if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
    info "Adding '$shell_path' to /etc/shells"
    sudo sh -c "echo $shell_path >> /etc/shells" 2>&1 \
      | print_info
  fi
  sudo chsh -s "$shell_path" "$USER" 2>&1 \
    | print_info
  success "Using zsh from homebrew"
}

set_defaults() {
  source $MACOS_DEFAULTS 2>&1 | print_info
  success "Set macOS defaults"
}

set_computername() {
  user "How should this computer be called?"
  read -e name
  sudo scutil --set ComputerName rmbp
  sudo scutil --set LocalHostName rmbp
  success "Set computername to $name"
}


install_homebrew
install_apps
update_shell
set_defaults
prompt "Change computername?" && set_computername
